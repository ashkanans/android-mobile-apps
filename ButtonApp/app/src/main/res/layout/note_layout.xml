<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <EditText
        android:id="@+id/editTextTextMultiLine"
        android:layout_width="wrap_content"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="16dp"
        android:ems="10"
        android:gravity="start|top"
        android:inputType="textMultiLine"
        android:scrollIndicators="end|right"
        android:scrollbars="vertical"
        android:text="THE OK BUTTON IS NOW CONSTRAINED VERTICALLY TO REMAIN LINED UP WITH THE BASELINE OF THE CANCEL BUTTON, ENSURING A MORE UNIFORM AND CONSISTENT APPEARANCE IN THE USER INTERFACE. THIS BASELINE CONSTRAINT, UNLIKE THE TRADITIONAL APPROACH OF SIMPLY CONSTRAINING THE TOP OR BOTTOM OF THE BUTTON, EMPHASIZES TEXT ALIGNMENT, WHICH ENHANCES READABILITY AND VISUAL COHESION. IN PRACTICE, THIS MEANS THAT EVEN IF THE BUTTONS VARY IN HEIGHT, THE TEXT WITHIN THEM WILL ALIGN HORIZONTALLY, RESULTING IN A MORE PROFESSIONAL AND POLISHED LAYOUT. PREVIOUSLY, WHEN THE OK BUTTON WAS CONSTRAINED TO THE BOTTOM EDGE OF THE LAYOUT, IT OFFERED VERTICAL FLEXIBILITY, ALLOWING IT TO BE REPOSITIONED FREELY UP AND DOWN THE SCREEN. HOWEVER, THIS FREEDOM OF MOVEMENT DIDN'T ALWAYS TRANSLATE TO OPTIMAL VISUAL HARMONY, AS THE ALIGNMENT BETWEEN THE OK AND CANCEL BUTTONS COULD BECOME DISRUPTED, LEADING TO AN INCONSISTENT USER EXPERIENCE. BY ADAPTING THE CONSTRAINT TO ALIGN WITH THE CANCEL BUTTON'S BASELINE, WE'VE INTRODUCED A MORE ROBUST AND INTUITIVE DESIGN PARADIGM, WHERE THE VISUAL COHESION OF THE INTERFACE REMAINS INTACT, EVEN WHEN ELEMENTS ARE RESIZED OR REPOSITIONED. "
        android:textSize="20sp"
        app:layout_constraintBottom_toTopOf="@+id/button2"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/textView"
        app:layout_constraintVertical_bias="0.0" />

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="24dp"
        android:layout_marginTop="24dp"
        android:layout_marginEnd="16dp"
        android:text="Constraint Layout"
        app:layout_constraintEnd_toStartOf="@+id/editTextTextMultiLine"
        app:layout_constraintHorizontal_bias="0.555"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:id="@+id/button2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="104dp"
        android:text="Cancel"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <Button
        android:id="@+id/button3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="16dp"
        android:text="OK"
        app:layout_constraintBaseline_toBaselineOf="@+id/button2"
        app:layout_constraintEnd_toStartOf="@+id/button2" />

    <ImageView
        android:id="@+id/imageView2"
        android:layout_width="128dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="32dp"
        android:layout_marginEnd="16dp"
        app:layout_constraintEnd_toStartOf="@+id/editTextTextMultiLine"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/textView"
        tools:srcCompat="@tools:sample/avatars" />
</androidx.constraintlayout.widget.ConstraintLayout>